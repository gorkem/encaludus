name: Nightly Builds

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * *'

jobs:
  build-console:
    name: Build console frontend
    runs-on: ubuntu-latest

    steps:
    - name: Get Console master
      uses: actions/checkout@v2
      with:
        repository: openshift/console
        ref: master
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Build Frontend
      uses: actions/setup-node@v2
      with:
        node-version: '15'
    - name: Install console frontend dependencies
      run: yarn install
      working-directory: ./frontend
    - name: Build console frontend
      run: yarn run build
      working-directory: ./frontend
    - name: Upload frontend artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend-dist
        path: ./frontend/public/dist
    - name: Upload graphql artifacts
      uses: actions/upload-artifact@v2
      with:
        name: graphql-dist
        path: ./pkg/graphql
    - name: Build backend for linux
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15.5
    - name: Build console backend binary
      run: go build -o bin/linux/bridge github.com/openshift/console/cmd/bridge
      env:
        GOFLAGS: '-mod=vendor'
        GOOS: 'linux'
        GOARCH: 'amd64'
    - name: Build backend for darwin
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15.5
    - name: Build console backend binary
      run: go build -o bin/darwin/bridge github.com/openshift/console/cmd/bridge
      env:
        GOFLAGS: '-mod=vendor'
        GOOS: 'darwin'
        GOARCH: 'amd64'
    - name: Build backend for windows
      uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.15.5
    - name: Build console backend binary
      run: go build -o bin/win32/bridge.exe github.com/openshift/console/cmd/bridge
      env:
        GOFLAGS: '-mod=vendor'
        GOOS: 'windows'
        GOARCH: 'amd64'
    - name: Upload backend artifacts
      uses: actions/upload-artifact@v2
      with:
        name: backend-dist
        path: ./bin

  build-platform:
    name: Build platfrom specific packages
    needs: [build-console]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Restore frontend-dist
      uses: actions/download-artifact@v2
      with:
        name: frontend-dist
        path: ../console/frontend/public/dist
    - name: Restore backend-dist
      uses: actions/download-artifact@v2
      with:
        name: backend-dist
        path: ../console/bin
    - name: Restore graphql-dist
      uses: actions/download-artifact@v2
      with:
        name: graphql-dist
        path: ../console/pkg/graphql
    - name: Build
      uses: actions/setup-node@v2
      with:
        node-version: '12'
    - name: Install dependencies
      run: yarn install
      working-directory: ./encaludus
    - name: Compile .ts
      run: yarn run compile
      working-directory: ./encaludus
    - name: Make elektron package
      run: yarn run make
      working-directory: ./encaludus
    - name: Upload Linux zip
      if: runner.os == 'Linux'
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/gorkem/encaludus/releases/35778241/assets{?name,label}
        release_id: 35778241
        asset_path: ./encaludus/out/make/zip/linux/x64/encaludus-linux-x64-0.1.0.zip
        asset_name: encaludus-${{ runner.os }}-$$.zip
        asset_content_type: application/zip
        max_releases: 7
    - name: Upload Windows zip
      if: runner.os == 'Windows'
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/gorkem/encaludus/releases/35778241/assets{?name,label}
        release_id: 35778241
        asset_path: ./encaludus/out/make/zip/win32/x64/encaludus-win32-x64-0.1.0.zip
        asset_name: encaludus-${{ runner.os }}-$$.zip
        asset_content_type: application/zip
        max_releases: 7
    - name: Upload Mac zip
      if: runner.os == 'macOS'
      uses: WebFreak001/deploy-nightly@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: https://uploads.github.com/repos/gorkem/encaludus/releases/35778241/assets{?name,label}
        release_id: 35778241
        asset_path: ./encaludus/out/make/zip/darwin/x64/encaludus-darwin-x64-0.1.0.zip
        asset_name: encaludus-${{ runner.os }}-$$.zip
        asset_content_type: application/zip
        max_releases: 7
